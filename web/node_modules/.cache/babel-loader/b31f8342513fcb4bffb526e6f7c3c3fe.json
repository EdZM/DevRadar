{"ast":null,"code":"var _jsxFileName = \"D:\\\\Arquivos_-_USP\\\\Cursos\\\\OmniStack\\\\web\\\\src\\\\App.js\";\nimport React from 'react'; //Sempre que for usar HTML dentro do JS preciso importar o react\n\n/*\nimport React, { useState } from 'react'; //Sempre que for usar HTML dentro do JS preciso importar o react\n\nuseState é uma função para criar estados\n3 Conceitos importantes do React\nComponente:  função que retorna um conteudo HTML, CSS, JS. Pode ser repetível/replicável\n             -oficialmente: Bloco isolado de HTML, CSS e JS, o qual não interfere no restante da aplicação\n\nPropriedade: é quando eu faço passagem de atributos para um componente do React \n             -oficialmente: Informações que um componente PAI passa para o componente FILHO\n\nEstado: informação manipulada/mantida pelo componente (lembrar: imutabilidade)\n\n// É bom ter só um componente por arquivo\n// import Header from './Header';\n// function App() { // primeira letra SEMPRE maiúscula\n//   return ( // não posso ter um componente um embaixo do outro sem ter um componente por volta deles(por isso incluí o div, mas isso atrapalha a estilização do código)\n//     // a alternativa ao div é a tag vazia\n//     <> \n//       <Header title=\"Titulo 1\" />\n//       <Header title=\"Titulo 2\" />\n//       <Header title=\"Titulo 4\" />\n//     </>\n//   );\n// }\n\n// função propria de um componente é criada dentro dele mesmo\nfunction App() { // primeira letra SEMPRE maiúscula\n  const [counter, setCounter] = useState(0); // retorna um vetor com duas informaçoes(necessario haver uma desestruturação para pegar esses dados)\n  \n  // quando a função setCounter é chamada, ela sempre cria um novo counter com base no valor anterior dessa variavel\n  // o fato de um novo counter ser criado tem a ver com a ideia de imutabilidade\n  function incrementCounter() {\n    setCounter(counter + 1);\n  }\n  \n  return ( // não posso ter um componente um embaixo do outro sem ter um componente por volta deles(por isso incluí o div, mas isso atrapalha a estilização do código)\n    // a alternativa ao div é a tag vazia\n    // {} depois de um atributo é para incluir JS no HTMl\n    <>\n      <h1>Contador: {counter}</h1>\n      <button onClick={incrementCounter}>Incrementar</button>\n    </>\n  );\n}\n\n*/\n\nimport './global.css';\nimport './App.css';\n\nfunction App() {\n  return React.createElement(\"div\", {\n    id: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Cadastrar\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"input-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"github_username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Usu\\xE1rio do Github\"), React.createElement(\"input\", {\n    name: \"github_username\",\n    id: \"github_username\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    class: \"input-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"techs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Tecnologias\"), React.createElement(\"input\", {\n    name: \"techs\",\n    id: \"techs\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"github_username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Usu\\xE1rio do Github\"), React.createElement(\"input\", {\n    name: \"github_username\",\n    id: \"github_username\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Arquivos_-_USP/Cursos/OmniStack/web/src/App.js"],"names":["React","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA2B;;AAE3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,OAAO,cAAP;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAEb,SACE;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAO,IAAA,IAAI,EAAC,iBAAZ;AAA8B,IAAA,EAAE,EAAC,iBAAjC;AAAmD,IAAA,QAAQ,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADJ,EAMI;AAAK,IAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,EAAE,EAAC,OAAvB;AAA+B,IAAA,QAAQ,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANJ,EAYE;AAAO,IAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAZF,EAaE;AAAO,IAAA,IAAI,EAAC,iBAAZ;AAA8B,IAAA,EAAE,EAAC,iBAAjC;AAAmD,IAAA,QAAQ,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CAFF,CADF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,CADF;AAgCD;;AAID,eAAeA,GAAf","sourcesContent":["import React from 'react'; //Sempre que for usar HTML dentro do JS preciso importar o react\n\n/*\nimport React, { useState } from 'react'; //Sempre que for usar HTML dentro do JS preciso importar o react\n\nuseState é uma função para criar estados\n3 Conceitos importantes do React\nComponente:  função que retorna um conteudo HTML, CSS, JS. Pode ser repetível/replicável\n             -oficialmente: Bloco isolado de HTML, CSS e JS, o qual não interfere no restante da aplicação\n\nPropriedade: é quando eu faço passagem de atributos para um componente do React \n             -oficialmente: Informações que um componente PAI passa para o componente FILHO\n\nEstado: informação manipulada/mantida pelo componente (lembrar: imutabilidade)\n\n// É bom ter só um componente por arquivo\n// import Header from './Header';\n// function App() { // primeira letra SEMPRE maiúscula\n//   return ( // não posso ter um componente um embaixo do outro sem ter um componente por volta deles(por isso incluí o div, mas isso atrapalha a estilização do código)\n//     // a alternativa ao div é a tag vazia\n//     <> \n//       <Header title=\"Titulo 1\" />\n//       <Header title=\"Titulo 2\" />\n//       <Header title=\"Titulo 4\" />\n//     </>\n//   );\n// }\n\n// função propria de um componente é criada dentro dele mesmo\nfunction App() { // primeira letra SEMPRE maiúscula\n  const [counter, setCounter] = useState(0); // retorna um vetor com duas informaçoes(necessario haver uma desestruturação para pegar esses dados)\n  \n  // quando a função setCounter é chamada, ela sempre cria um novo counter com base no valor anterior dessa variavel\n  // o fato de um novo counter ser criado tem a ver com a ideia de imutabilidade\n  function incrementCounter() {\n    setCounter(counter + 1);\n  }\n  \n  return ( // não posso ter um componente um embaixo do outro sem ter um componente por volta deles(por isso incluí o div, mas isso atrapalha a estilização do código)\n    // a alternativa ao div é a tag vazia\n    // {} depois de um atributo é para incluir JS no HTMl\n    <>\n      <h1>Contador: {counter}</h1>\n      <button onClick={incrementCounter}>Incrementar</button>\n    </>\n  );\n}\n\n*/\n\nimport './global.css';\nimport './App.css';\n\nfunction App() {\n\n  return(\n    <div id=\"app\">\n      <aside>\n        <strong>Cadastrar</strong>\n        <form>\n            <div class=\"input-block\">\n              <label htmlFor=\"github_username\" >Usuário do Github</label>\n              <input name=\"github_username\" id=\"github_username\" required />\n            </div>\n            \n            <div class=\"input-block\">\n              <label htmlFor=\"techs\" >Tecnologias</label>\n              <input name=\"techs\" id=\"techs\" required />\n            </div>\n\n\n          <label htmlFor=\"github_username\" >Usuário do Github</label>\n          <input name=\"github_username\" id=\"github_username\" required />\n\n        </form>\n      \n      \n      </aside>\n      \n      <main>\n\n      </main>\n    </div>  \n\n  );\n\n\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}